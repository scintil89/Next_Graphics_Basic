#version 330

layout(location = 0) in vec3 vertex;
layout(location = 2) in vec3 vertex_normal;

uniform mat4 modelview;
uniform mat4 projection;
uniform vec3 lightPos;

out vec3 vertexNormal;
out vec3 eyeDir;
out vec3 lightDir;

void main()
{
	mat4 normalMatrix = transpose(inverse(modelview));
	vertexNormal = (normalMatrix * vec4(vertex_normal, 0.0)).xyz;

	vec3 vertexInCamSpace = (modelview * vec4(vertex, 1.0)).xyz;
	eyeDir = -vertexInCamSpace.xyz;
	
	vec3 lightInCamSpace = vec4(modelview * vec4(lightPos, 1.0)).xyz;
	lightDir = vec3(lightInCamSpace - vertexInCamSpace).xyz;

	gl_Position = projection * vec4(vertexInCamSpace, 1.0);
}